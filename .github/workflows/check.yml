name: Check firmware update

on:
  workflow_dispatch:
  schedule:
    - cron: "0 12 * * *"
  
  
jobs:
  update:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          # A54X_CHN_HK
          - model: "SM-A5460"
            csc: "BRI"
            omc: "OZS"
            code: "asia"
          # A54X_EUR_OPEN
          - model: "SM-A546B"
            csc: "EUX"
            omc: "OXM"
            code: "eur"
          # A54X_SEA_OPEN
          - model: "SM-A546E"
            csc: "INS"
            omc: "ODM"
            code: "sea"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Compare latest version with current version
        run: |
          need_update=0
          latest=`curl --retry 5 --retry-delay 5 http://fota-cloud-dn.ospserver.net/firmware/${{ matrix.csc }}/${{ matrix.model }}/version.xml | grep latest | sed 's/^[^>]*>//' | sed 's/<.*//'`
          latest_short=`echo $latest | cut -d'/' -f1`
          latest_csc=`echo $latest | cut -d'/' -f2`
          latest_modem=`echo $latest | cut -d'/' -f3`
          current=`cat current.${{ matrix.model }}_${{ matrix.omc }}` || need_update=1
          [[ $latest != $current ]] && need_update=1
          echo "latest_version=$latest" >> $GITHUB_ENV
          echo "latest_shortversion=$latest_short" >> $GITHUB_ENV
          echo "latest_cscversion=$latest_csc" >> $GITHUB_ENV
          echo "latest_modemversion=$latest_modem" >> $GITHUB_ENV
          echo "need_update=$need_update" >> $GITHUB_ENV

      - name: Set up Node.js
        if: env.need_update == 1
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Set up Python 3
        if: env.need_update == 1
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        if: env.need_update == 1
        run: |
          sudo apt-get update
          sudo apt-get install -y liblz4-tool zip android-sdk-libsparse-utils f2fs-tools attr
          sudo wget -O /usr/bin/samfirm https://github.com/DavidArsene/samfirm.js/releases/download/v0.3.0/samfirm.js && sudo chmod +x /usr/bin/samfirm

      - name: Fetch firmware
        if: env.need_update == 1
        run: |
          if [[ "${{ matrix.model }}" == "SM-A5460" ]]; then
              imei="R5CW71BXYRV"
          elif [[ "${{ matrix.model }}" == "SM-A546B" ]]; then
              imei="350756481234568"
          elif [[ "${{ matrix.model }}" == "SM-A546U" ]]; then
              imei="356044291234563"
          elif [[ "${{ matrix.model }}" == "SM-A546U1" ]]; then
              imei="356642731234562"
          elif [[ "${{ matrix.model }}" == "SM-A546W" ]]; then
              imei="351617731234569"
          elif [[ "${{ matrix.model }}" == "SM-A546V" ]]; then
              imei="351783151234560"
          elif [[ "${{ matrix.model }}" == "SM-A546S" ]]; then
              imei="351992291234568"
          else
              imei="350090711234564"
          fi
          samfirm -m ${{ matrix.model }} -r ${{ matrix.csc }} -i $imei

      - name: Get path of files
        if: env.need_update == 1
        run: |
          echo "ap_tar=`find -name AP*`" >> $GITHUB_ENV
          echo "bl_tar=`find -name BL*`" >> $GITHUB_ENV
          echo "cp_tar=`find -name CP*`" >> $GITHUB_ENV
          echo "csc_tar=`find -name CSC*`" >> $GITHUB_ENV
          echo "home_csc_tar=`find -name HOME_CSC*`" >> $GITHUB_ENV

      - name: Check downloaded firmware version
        if: env.need_update == 1
        run: |
          version_short=`echo ${{ env.ap_tar }} | cut -d'_' -f3`
          version_csc=`echo ${{ env.csc_tar }} | cut -d'_' -f4`
          version_modem=`echo ${{ env.cp_tar }} | cut -d'_' -f3`
          [[ $version_short == ${{ env.latest_shortversion }} ]]
          [[ $version_csc == ${{ env.latest_cscversion }} ]]
          [[ $version_modem == ${{ env.latest_modemversion }} ]]
          echo PDA version: $version_short > versions.txt
          echo CSC version: $version_csc >> versions.txt
          echo Modem version: $version_modem >> versions.txt

      - name: Cleanup space
        if: env.need_update == 1
        run: |
          sudo apt-get remove --purge -y "php*" "dotnet*" "mysql*" "nodejs*" "clang*" "google*"
          sudo apt-get autoremove -y
          sudo apt-get clean
          sudo rm -rf /usr/local


      - name: Extract vendor and vendor_dlkm partition
        if: env.need_update == 1
        run: |
          tar xvf ${{ env.ap_tar }} super.img.lz4
          lz4 -d super.img.lz4 super.img
          rm super.img.lz4
          simg2img super.img super_raw.img
          rm super.img
          mv super_raw.img super.img
          python3 tools/bin/lpunpack.py -p vendor,vendor_dlkm super.img .
          rm super.img
          sudo su
          mkdir -p "tmp_out"
          chmod +x ./tools/bin/fuse.erofs
          [[ -e vendor.img ]] && ./tools/bin/fuse.erofs "vendor.img" "tmp_out" 
          mkdir -p vendor/tee_${{ matrix.code }}
          mkdir -p vendor/firmware/${{ matrix.code }}
          cp -a --preserve=all tmp_out/tee/* vendor/tee_${{ matrix.code }}
          cp -a --preserve=all tmp_out/firmware/AIE.bin vendor/firmware/${{ matrix.code }}
          cp -a --preserve=all tmp_out/firmware/calliope_sram.bin vendor/firmware/${{ matrix.code }}
          cp -a --preserve=all tmp_out/firmware/mfc_fw.bin vendor/firmware/${{ matrix.code }}
          cp -a --preserve=all tmp_out/firmware/os.checked.bin vendor/firmware/${{ matrix.code }}
          cp -a --preserve=all tmp_out/firmware/pablo_icpufw.bin vendor/firmware/${{ matrix.code }}
          cp -a --preserve=all tmp_out/firmware/vts.bin vendor/firmware/${{ matrix.code }}
          echo "Generating fs_config/file_context for vendor.img"
          [ -f "file_context-vendor-${{ matrix.code }}" ] && rm "file_context-vendor-${{ matrix.code }}"
          [ -f "fs_config-vendor-${{ matrix.code }}" ] && rm "fs_config-vendor-${{ matrix.code }}"
          touch file_context-vendor-${{ matrix.code }}
          touch fs_config-vendor-${{ matrix.code }}
          while read -r i; do
            {
              echo -n "$i "
              getfattr -n security.selinux --only-values -h "$i"
              echo ""
            } >> "file_context-vendor-${{ matrix.code }}"
  
            case "$i" in
                *"run-as" | *"simpleperf_app_runner")
                    CAPABILITIES="0xc0"
                    ;;
                *)
                    CAPABILITIES="0x0"
                    ;;
            esac
            stat -c "%n %u %g %a capabilities=$CAPABILITIES" "$i" >> "fs_config-vendor-${{ matrix.code }}"
          done <<< "$(find "tmp_out")"

          sed -i "s/tmp_out/\/vendor/g" "file_context-vendor-${{ matrix.code }}"
          sed -i "s/tmp_out / /g" "fs_config-vendor-${{ matrix.code }}" \
              && sed -i "s/tmp_out/vendor/g" "fs_config-vendor-${{ matrix.code }}"
          
          sed -i "s/\x0//g" "file_context-vendor-${{ matrix.code }}" \
              && sed -i 's/\./\\./g' "file_context-vendor-${{ matrix.code }}" \
              && sed -i 's/\+/\\+/g' "file_context-vendor-${{ matrix.code }}" \
              && sed -i 's/\[/\\[/g' "file_context-vendor-${{ matrix.code }}" \
          
          fusermount -u tmp_out
          [[ -e vendor.img ]] && rm vendor.img
          [[ -e vendor_dlkm.img ]] && rm vendor_dlkm.img

      - name: Update current version
        if: env.need_update == 1
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git pull origin ${{github.ref}} --ff-only
          echo ${{ env.latest_version }} > current.${{ matrix.model }}_${{ matrix.omc }}
          git add current.${{ matrix.model }}_${{ matrix.omc }}
          git commit -m "${{ matrix.model }}: ${{ env.latest_version }}" || echo "No changes to commit"
          git add vendor
          git commit -m "Update vendor/tee and fiirmware" || echo "No changes to commit"
          git add file_context-vendor-${{ matrix.code }} fs_config-vendor-${{ matrix.code }}
          git commit -m "Update file_context and fs_config for vendor" || echo "No changes to commit"
          git push origin ${{github.ref}}
